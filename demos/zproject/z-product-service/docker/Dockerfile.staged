# syntax=docker/dockerfile:experimental
FROM eclipse-temurin:17-jdk as build

# Set working directory and create it if it doesn't exist
WORKDIR /workspace/app
RUN mkdir -p /workspace/app

# Copy Maven wrapper and settings
COPY mvnw .
COPY .mvn .mvn

# Copy pom.xml and source code
COPY pom.xml .
COPY src src

# Build the application with Maven, using a cache for dependencies
RUN --mount=type=cache,target=/root/.m2 ./mvnw install -DskipTests

# Extract the application using jarmode=layertools
RUN mkdir -p target/extracted && java -Djarmode=layertools -jar target/*.jar extract --destination target/extracted

# Create a new stage for the final image
FROM openjdk:17-alpine

# Set environment variables
ENV TZ=America/Miami
ENV JAVA_OPTS="-Xms256m -Xmx256m -XX:+UseG1GC -XX:+UseStringDeduplication"

# Create a non-root user and set it as the default user
RUN adduser -D uu
USER uu

# Create a volume for temporary files
VOLUME /tmp

# Copy the extracted application from the previous stage
ARG EXTRACTED=/workspace/app/target/extracted
COPY --from=build $EXTRACTED/dependencies/ ./
COPY --from=build $EXTRACTED/spring-boot-loader/ ./
COPY --from=build $EXTRACTED/snapshot-dependencies/ ./
COPY --from=build $EXTRACTED/application/ ./

# Set the entrypoint to run the Spring Boot application
ENTRYPOINT ["java", "org.springframework.boot.loader.JarLauncher"]